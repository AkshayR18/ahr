<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config" scriptlang="groovy">

<script><![CDATA[


	import java.io.File;
	import java.io.FileOutputStream;
	import java.io.FileReader;
	import java.io.IOException;
	import java.nio.file.*;
	import java.time.*;
	import org.apache.commons.io.comparator.LastModifiedFileComparator;	
	import com.workfusion.rpa.helpers.resources.Filter;
	import java.time.temporal.ChronoUnit;
	import java.util.Date;
	import java.util.Calendar;
	import java.text.SimpleDateFormat;
	import java.sql.Timestamp;
	import java.time.OffsetDateTime;
	import java.time.ZoneOffset;
	import java.time.LocalDate;
	import java.time.DayOfWeek;
	import java.time.format.DateTimeFormatter;
	import java.time.temporal.ChronoField;
    import com.workfusion.rpa.helpers.Excel;
    import org.apache.commons.lang.math.NumberUtils;
    import org.openqa.selenium.By
    import org.openqa.selenium.By.ByXPath
    import com.workfusion.rpa.helpers.selectors.ByText
    import com.google.gson.Gson;	
	import com.workfusion.studio.rpa.recorder.api.*
	import com.workfusion.studio.rpa.recorder.api.types.*
	import com.workfusion.studio.rpa.recorder.api.custom.*
	import com.workfusion.studio.rpa.recorder.api.internal.representation.*
	import com.workfusion.bot.exception.*    	   
	import org.apache.commons.lang3.time.DateUtils;
	import java.io.File;
	import java.io.FileOutputStream;
	import java.io.OutputStreamWriter;
	import java.io.Writer;
	import java.nio.file.FileSystem;
	import java.nio.file.FileSystems;
	import java.nio.file.Files;
	import java.nio.file.Path;
	import java.nio.file.StandardCopyOption;
	
		int year = Calendar.getInstance().get(Calendar.YEAR);
	    log.info("Year : "+year);
	    
	    Date date = new Date();
		log.info("date : "+date) 
        SimpleDateFormat sdf = new SimpleDateFormat("ddMMyyyy");
        
        String dateString = sdf.format(date);  
        log.info("Date (ddMMyyyy) : "+dateString);  
	    
	    String Dir = ("C:\Users\Akshay\Desktop\The Folder Rises\");
	   
	    List<String> results = new ArrayList<String>();
	    List<String> final_results = new ArrayList<String>();
		
	    File[] files = new File(Dir).listFiles();	    
	    String num_of_files = new File(Dir).listFiles().length;
	    log.info("Number of files present : "+num_of_files)
	    
	    for (File file : files){
			if(file.isFile()){
				if(file.getName().contains(dateString)){					
					results.add(file.getName());
				}
			}

	    }
		log.info("File Name : "+results);		
    	            
]]></script>

    <export include-original-data="true"></export>

</config>
